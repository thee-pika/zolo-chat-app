// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  name             String
  email            String
  password         String
  avatar           String
  publicId         String?
  bio              String
  sentRequests     Request[] @relation("Sender")
  receivedRequests Request[] @relation("Receiver")
}

model Chat {
  id        String    @id @default(uuid())
  groupChat Boolean
  creator   String?
  members   String[]
  chatName  String?
  avatar    String?
  messages  Message[]
}

model Message {
  id          String       @id @default(uuid())
  senderId    String
  content     String
  chatId      String
  chat        Chat         @relation(fields: [chatId], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  attachments Attachment[]
}

model Attachment {
  id        String  @id @default(uuid())
  public_id String
  url       String
  messageId String
  message   Message @relation(fields: [messageId], references: [id])
}

model Request {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  sender     User     @relation("Sender", fields: [senderId], references: [id])
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  status     Status   @default(PENDING)
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
